package se.MinimalisticPerfectionTechnology.start;

import java.io.File;
import java.io.FileFilter;
import java.io.FilenameFilter;
import java.util.ArrayList;

import javax.swing.filechooser.FileNameExtensionFilter;

public class FileOfDirFetcher {
	private ArrayList<String> matchingFiles;
	private WordSearcher wordSearcher = null;
	public FileOfDirFetcher(ArrayList<String> files, String word)
	{
		this.matchingFiles = files;
		wordSearcher = new  WordSearcher(word);
	}
	public void addMachingDocuments(String path) {
		File directory = new File(path);
		File[] myFiles = directory.listFiles(new FileFilter() {
		    private final FileNameExtensionFilter filter =
		        new FileNameExtensionFilter("Text files",
		        	"txt", "rtf", "log" +
		            "ans", "fbl", "mbox", "log", "diz", "docx" +
		            "abw", "aim", "ase", "bdp", "bdr", "btd", "dwd" +
		            "dx", "emlx", "fadein", "fdx", "fpt", "hs", "kes" +
		            "lis", "lst", "mwd", "prt", "psw", "rtfd", "tab" +
		            "text", "udp", "vnt", "wpt", "wri", "xwp", "doc");
		    public boolean accept(File file) {
		        return filter.accept(file);
		    }
		});

		for(File file : myFiles)
		{
			if(file.isFile() && wordSearcher.hasPreDefinedSearchWord(file.getAbsolutePath()))
			{
				matchingFiles.add(file.getAbsolutePath());
			}
		}
	}
}
